---
- hosts: myhosts
  connection: local
  gather_facts: False
  tasks:
    - name: Validate input provided by user
      when:
      - (username is not defined or password is not defined) and (cert_file is not defined or key_file is not defined) and (auth_token is not defined)
      ansible.builtin.fail:
        msg: "username/password or cert_file/key_file or auth_token is mandatory"

    - name: Fail when more than one valid authentication method is provided
      when:
      - ((username is defined or password is defined) and (cert_file is defined or key_file is defined) and auth_token is defined) or ((username is defined or password is defined) and (cert_file is defined or key_file is defined)) or ((username is defined or password is defined) and auth_token is defined) or ((cert_file is defined or key_file is defined) and auth_token is defined)
      ansible.builtin.fail:
        msg: "Only one authentication method is allowed. Provide either username/password or cert_file/key_file or auth_token."

    - name: Get firmware upgrade/upload status when username and password are defined
      block:
        - name: Get firmware upgrade/upload status when username and password are defined
          register: result
          hpe.ilo.ilo_firmware:
            category: TaskService
            command: GetFirmwareStatus
            baseuri: "{{ baseuri }}"
            username: "{{ username }}"
            password: "{{ password }}"

        - name: Firmware upgrade/upload status when username and password are defined
          debug:
            msg: "{{ result }}"

      when: username is defined and password is defined

    - name: Get firmware upgrade/upload status when cert_file and key_file are defined
      block:
        - name: Get firmware upgrade/upload status when cert_file and key_file are defined
          register: result
          hpe.ilo.ilo_firmware:
            category: TaskService
            command: GetFirmwareStatus
            baseuri: "{{ baseuri }}"
            cert_file: "{{ cert_file }}"
            key_file: "{{ key_file }}"

        - name: Firmware upgrade/upload status when cert_file and key_file are defined
          debug:
            msg: "{{ result }}"

      when: cert_file is defined and key_file is defined

    - name: Get firmware upgrade/upload status when auth_token is defined
      block:
        - name: Get firmware upgrade/upload status when auth_token is defined
          register: result
          hpe.ilo.ilo_firmware:
            category: TaskService
            command: GetFirmwareStatus
            baseuri: "{{ baseuri }}"
            auth_token: "{{ auth_token }}"

        - name: Firmware upgrade/upload status when auth_token is defined
          debug:
            msg: "{{ result }}"

      when: auth_token is defined
