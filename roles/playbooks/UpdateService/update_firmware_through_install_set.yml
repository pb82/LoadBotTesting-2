---
- hosts: myhosts
  connection: local
  gather_facts: False
  tasks:
    - name: Validate input provided by user
      when:
      - (username is not defined or password is not defined) and (cert_file is not defined or key_file is not defined) and (auth_token is not defined)
      ansible.builtin.fail:
        msg: "username/password or cert_file/key_file or auth_token is mandatory"

    - name: Fail when more than one valid authentication method is provided
      when:
      - ((username is defined or password is defined) and (cert_file is defined or key_file is defined) and auth_token is defined) or ((username is defined or password is defined) and (cert_file is defined or key_file is defined)) or ((username is defined or password is defined) and auth_token is defined) or ((cert_file is defined or key_file is defined) and auth_token is defined)
      ansible.builtin.fail:
        msg: "Only one authentication method is allowed. Provide either username/password or cert_file/key_file or auth_token."

    - name: Check whether install set file exists on the VM
      register: install_set_file_exists
      ansible.builtin.stat:
        path: "{{ _path_ }}"

    - when: install_set_file_exists.stat.exists == False
      ansible.builtin.fail:
        msg: "{{ _msg_ }}"

    - name: Read install set file
      ansible.builtin.set_fact:
        input_file: "{{ lookup('file', '{{ install_set }}') | from_json }}"

    - name: Check whether maintenance window is provided
      ansible.builtin.set_fact:
        maintenance_window: "{{ True if input_file.maintenance_window is defined else False}}"

    - name: Perform firmware upgrade on the server using install set when username and password are defined
      block:
        - name: Block for firmware upgradation without maintenance window
          block:
            - name: Perform firmware upgrade on the server without maintenance window using install set when username and password are defined
              register: firmware_upgrade_rsp
              hpe.ilo.ilo_firmware:
                category: "UpdateService"
                command: "UpdateFirmwareThroughInstallSet"
                baseuri: "{{ baseuri }}"
                username: "{{ username }}"
                password: "{{ password }}"
                install_set_attributes:
                  Name: '{{ input_file.install_set_name }}'
                  Description: "{{ input_file.Description | default('')}}"
                  Install_set_sequence: '{{ input_file.install_set_sequence }}'

            - name: Collecting server IP, task ID(s) and URL details when username and password are defined
              ansible.builtin.set_fact:
                server_rsp_details:
                  Server: '{{ baseuri }}'
                  Tasks: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareThroughInstallSet']['msg'] }}"

            - name: Firmware upgrade status when username and password are defined
              debug:
                msg: "{{ server_rsp_details }}"
          when: not maintenance_window

        - name: Block for firmware upgradation with maintenance window
          block:
            - name: Perform firmware upgrade on the server with maintenance window using install set when username and password are defined
              register: firmware_upgrade_rsp
              hpe.ilo.ilo_firmware:
                category: "UpdateService"
                command: "UpdateFirmwareThroughInstallSet"
                baseuri: "{{ baseuri }}"
                username: "{{ username }}"
                password: "{{ password }}"
                install_set_attributes:
                  Name: '{{ input_file.install_set_name }}'
                  Description: "{{ input_file.Description | default('')}}"
                  Install_set_sequence: '{{ input_file.install_set_sequence }}'
                maintenance_window_details: "{{ input_file.maintenance_window}}"

            - name: Collecting server IP, task ID(s) and URL details when username and password are defined
              ansible.builtin.set_fact:
                server_rsp_details:
                  Server: '{{ baseuri }}'
                  Tasks: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareThroughInstallSet']['msg'] }}"

            - name: Firmware upgrade status when username and password are defined
              debug:
                msg: "{{ server_rsp_details }}"
          when: maintenance_window

      when: username is defined and password is defined

    - name: Perform firmware upgrade on the server using install set when cert_file and key_file are defined
      block:
        - name: Block for firmware upgradation without maintenance window
          block:
            - name: Perform firmware upgrade on the server without maintenance window using install set when cert_file and key_file are defined
              register: firmware_upgrade_rsp
              hpe.ilo.ilo_firmware:
                category: "UpdateService"
                command: "UpdateFirmwareThroughInstallSet"
                baseuri: "{{ baseuri }}"
                cert_file: "{{ cert_file }}"
                key_file: "{{ key_file }}"
                install_set_attributes:
                  Name: '{{ input_file.install_set_name }}'
                  Description: "{{ input_file.Description | default('')}}"
                  Install_set_sequence: '{{ input_file.install_set_sequence }}'

            - name: Collecting server IP, task ID(s) and URL details when cert_file and key_file are defined
              ansible.builtin.set_fact:
                server_rsp_details:
                  Server: '{{ baseuri }}'
                  Tasks: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareThroughInstallSet']['msg'] }}"

            - name: Firmware upgrade status when cert_file and key_file are defined
              debug:
                msg: "{{ server_rsp_details }}"
          when: not maintenance_window

        - name: Block for firmware upgradation with maintenance window
          block:
            - name: Perform firmware upgrade on the server with maintenance window using install set when cert_file and key_file are defined
              register: firmware_upgrade_rsp
              hpe.ilo.ilo_firmware:
                category: "UpdateService"
                command: "UpdateFirmwareThroughInstallSet"
                baseuri: "{{ baseuri }}"
                cert_file: "{{ cert_file }}"
                key_file: "{{ key_file }}"
                install_set_attributes:
                  Name: '{{ input_file.install_set_name }}'
                  Description: "{{ input_file.Description | default('')}}"
                  Install_set_sequence: '{{ input_file.install_set_sequence }}'
                maintenance_window_details: "{{ input_file.maintenance_window}}"

            - name: Collecting server IP, task ID(s) and URL details when cert_file and key_file are defined
              ansible.builtin.set_fact:
                server_rsp_details:
                  Server: '{{ baseuri }}'
                  Tasks: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareThroughInstallSet']['msg'] }}"

            - name: Firmware upgrade status when cert_file and key_file are defined
              debug:
                msg: "{{ server_rsp_details }}"
          when: maintenance_window

      when: cert_file is defined and key_file is defined

    - name: Perform firmware upgrade on the server using install set when auth token is defined
      block:
        - name: Block for firmware upgradation without maintenance window
          block:
            - name: Perform firmware upgrade on the server without maintenance window using install set when auth token is defined
              register: firmware_upgrade_rsp
              hpe.ilo.ilo_firmware:
                category: "UpdateService"
                command: "UpdateFirmwareThroughInstallSet"
                baseuri: "{{ baseuri }}"
                auth_token: "{{ auth_token }}"
                install_set_attributes:
                  Name: '{{ input_file.install_set_name }}'
                  Description: "{{ input_file.Description | default('')}}"
                  Install_set_sequence: '{{ input_file.install_set_sequence }}'

            - name: Collecting server IP, task ID(s) and URL details when auth token is defined
              ansible.builtin.set_fact:
                server_rsp_details:
                  Server: '{{ baseuri }}'
                  Tasks: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareThroughInstallSet']['msg'] }}"

            - name: Firmware upgrade status when auth token is defined
              debug:
                msg: "{{ server_rsp_details }}"
          when: not maintenance_window

        - name: Block for firmware upgradation with maintenance window
          block:
            - name: Perform firmware upgrade on the server with maintenance window using install set when auth token is defined
              register: firmware_upgrade_rsp
              hpe.ilo.ilo_firmware:
                category: "UpdateService"
                command: "UpdateFirmwareThroughInstallSet"
                baseuri: "{{ baseuri }}"
                auth_token: "{{ auth_token }}"
                install_set_attributes:
                  Name: '{{ input_file.install_set_name }}'
                  Description: "{{ input_file.Description | default('')}}"
                  Install_set_sequence: '{{ input_file.install_set_sequence }}'
                maintenance_window_details: "{{ input_file.maintenance_window}}"

            - name: Collecting server IP, task ID(s) and URL details when auth token is defined
              ansible.builtin.set_fact:
                server_rsp_details:
                  Server: '{{ baseuri }}'
                  Tasks: "{{ firmware_upgrade_rsp['ilo_firmware']['UpdateFirmwareThroughInstallSet']['msg'] }}"

            - name: Firmware upgrade status when auth token is defined
              debug:
                msg: "{{ server_rsp_details }}"
          when: maintenance_window

      when: auth_token is defined

