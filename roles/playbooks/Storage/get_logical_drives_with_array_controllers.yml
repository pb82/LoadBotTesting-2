---
- hosts: myhosts
  connection: local
  gather_facts: false
  tasks:
    - name: Validate input provided by user
      when:
        - (username is not defined or password is not defined) and (cert_file is not defined or key_file is not defined) and (auth_token is not defined)
      ansible.builtin.fail:
        msg: username/password or cert_file/key_file or auth_token is mandatory

    - name: Fail when more than one valid authentication method is provided
      when:
        - ((username is defined or password is defined) and (cert_file is defined or key_file is defined) and auth_token is defined) or ((username is defined or password
          is defined) and (cert_file is defined or key_file is defined)) or ((username is defined or password is defined) and auth_token is defined) or ((cert_file
          is defined or key_file is defined) and auth_token is defined)
      ansible.builtin.fail:
        msg: Only one authentication method is allowed. Provide either username/password or cert_file/key_file or auth_token.

    - name: Get logical drives with array controllers when username and password are defined
      block:
        - register: logical_drives_data
          hpe.ilo.ilo_storage:
            category: Systems
            command: GetLogicalDrivesWithArrayControllers
            baseuri: "{{ baseuri }}"
            username: "{{ username }}"
            password: "{{ password }}"

        - name: Logical drives present in the server
          debug:
            msg: "{{ logical_drives_data }}"

      when: username is defined and password is defined

    - name: Get logical drives with array controllers when cert_file and key_file are defined
      block:
        - ilo_storage:
            category: Systems
            command: GetLogicalDrivesWithArrayControllers
            baseuri: "{{ baseuri }}"
            cert_file: "{{ cert_file }}"
            key_file: "{{ key_file }}"
          register: logical_drives_data

        - name: Logical drives present in the server
          debug:
            msg: "{{ logical_drives_data }}"

      when: cert_file is defined and key_file is defined

    - name: Get logical drives with array controllers when auth_token is defined
      block:
        - ilo_storage:
            category: Systems
            command: GetLogicalDrivesWithArrayControllers
            baseuri: "{{ baseuri }}"
            auth_token: "{{ auth_token }}"
          register: logical_drives_data

        - name: Logical drives present in the server
          debug:
            msg: "{{ logical_drives_data }}"

      when: auth_token is defined
